{"version":3,"sources":["components/TodoContext.jsx","hook/useLocalStorage.jsx","components/HeaderNav.jsx","components/TodoCounter.jsx","components/TodoSearch.jsx","components/TodoList.jsx","components/TodoItem.jsx","components/CreateTodoButton.jsx","Modal/CreateTask.jsx","components/TodoForm.jsx","AppUI.js","App.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifyItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","complete","length","totalTodos","searchedTodos","todoText","text","toLocaleLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","HeaderNav","TodoCounter","useContext","TodoSearch","className","placeholder","onChange","event","target","TodoList","TodoItem","completed","onClick","onComplete","onDelete","CreateTodoButton","CreateTask","ReactDOM","createPortal","document","getElementById","TodoForm","todoNew","setTodoNew","newError","setNewError","onSubmit","preventDefault","autoFocus","rows","type","AppUI","style","color","map","App","render"],"mappings":"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","file":"static/js/main.850b4537.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport { useLocalStorage } from \"../hook/useLocalStorage\";\nimport { useState } from \"react\";\n\nconst TodoContext = createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n\n  const completedTodos = todos.filter((todo) => !!todo.complete).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLocaleLowerCase();\n      const searchText = searchValue.toLocaleLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      complete: false,\n      text,\n    });\n    saveTodos(newTodos);\n  };\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].complete = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        addTodo,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n","import { useState, useEffect } from \"react\";\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n\n  const saveItem = (newItem) => {\n    try {\n      const stringifyItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifyItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error)\n    }\n  };\n\n  return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };\n","import '../styles/HeaderNav.css'\nfunction HeaderNav() {\n  return (\n    <header>\n      <span>Aplication with React</span>\n      <span>By Camilo Mora </span>\n    </header>\n  );\n}\n\nexport { HeaderNav };","import { useContext } from \"react\";\nimport \"../styles/TodoCounter.css\";\nimport { TodoContext } from \"./TodoContext\";\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = useContext(TodoContext);\n  return (\n    <div>\n      <h1>How is your day?</h1>\n      <h2>\n        You have completed {completedTodos} of {totalTodos} TODOs\n      </h2>\n    </div>\n  );\n}\n\nexport { TodoCounter };\n","import { useContext } from \"react\";\nimport \"../styles/TodoSearch.css\";\nimport { TodoContext } from \"./TodoContext\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = useContext(TodoContext);\n  const onSearchValue = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <input\n      className=\"input\"\n      placeholder=\"Search Tasks\"\n      value={searchValue}\n      onChange={onSearchValue}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import \"../styles/TodoList.css\";\nfunction TodoList(props) {\n  return (\n    <section className=\"tasks-container\">\n      <div className=\"scroll\">\n        <ul>{props.children}</ul>\n      </div>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import \"../styles/TodoItem.css\";\n\nfunction TodoItem(props) {\n  return (\n    <li>\n        <i\n          className={`fas fa-check-square check ${\n            props.completed && \"check-activate\"\n          }`}\n          onClick={props.onComplete}\n        ></i>\n        <p className={`task ${props.completed && \"check-activate-text\"}`}>\n          {props.text}\n        </p>\n        <i className=\"far fa-trash-alt delete\" onClick={props.onDelete}></i>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import { useContext } from \"react\";\nimport \"../styles/CreateTodoButton.css\";\nimport { TodoContext } from \"./TodoContext\";\n\nfunction CreateTodoButton() {\n  const { setOpenModal } = useContext(TodoContext);\n  const onClickButton = () => {\n    setOpenModal(true);\n  };\n\n  return(\n    <div className=\"container-button\">\n      <button className=\"button-add-task\" onClick={onClickButton}>Create Task</button>\n    </div>\n  )\n}\n\nexport { CreateTodoButton };\n","import ReactDOM from \"react-dom\";\nimport \"./CreateTask.css\"\n\nfunction CreateTask({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"create-task-background\">\n      {children}\n    </div>,\n    document.getElementById(\"createTask\")\n  );\n}\n\nexport { CreateTask }\n","import { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { TodoContext } from \"./TodoContext\";\nimport '../styles/TodoForm.css'\n\nfunction TodoForm() {\n  const [todoNew, setTodoNew] = useState(\"\");\n  const [newError, setNewError] = useState(false)\n  const { addTodo, setOpenModal } = useContext(TodoContext);\n\n  const onChange = (event) => {\n    setTodoNew(event.target.value);\n  };\n\n  const onCancel = () => {\n    setOpenModal(false)\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (todoNew !== \"\") {\n      addTodo(todoNew);\n      setOpenModal(false)\n    } else {\n      setNewError(true)\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>Add Task</label>\n      <textarea placeholder=\"Task...\"\n        value={todoNew}\n        onChange={onChange} \n        autoFocus rows=\"5\" \n        onClick={() => {\n          setNewError(false)\n        }} />\n      <div className=\"TodoForm-container-buttons\">\n        <button className=\"btn-right btn\" type=\"button\" onClick={onCancel}>\n          Cancel\n        </button>\n        <button className=\"btn-left btn\" type=\"submit\" onClick={onSubmit}>\n          Add\n        </button>\n      </div>\n      {newError && (\n        <p>You have to add a valid task</p>\n      )}\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import { useContext } from \"react\";\nimport { TodoContext } from \"./components/TodoContext\";\nimport { HeaderNav } from \"./components/HeaderNav\";\nimport { TodoCounter } from \"./components/TodoCounter\";\nimport { TodoSearch } from \"./components/TodoSearch\";\nimport { TodoList } from \"./components/TodoList\";\nimport { TodoItem } from \"./components/TodoItem\";\nimport { CreateTodoButton } from \"./components/CreateTodoButton\";\nimport { CreateTask } from \"./Modal/CreateTask\";\nimport { TodoForm } from \"./components/TodoForm\";\nfunction AppUI() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n  } = useContext(TodoContext);\n  return (\n    <>\n      <HeaderNav />\n      <TodoCounter />\n      <TodoSearch />\n      <TodoList>\n        {error && <p style={{ color: \"#fff\" }}>ERROR</p>}\n        {loading && <p style={{ color: \"#fff\" }}>Loading</p>}\n        {!loading && !searchedTodos.length && (\n          <p style={{ color: \"#fff\" }}>Create your first TODO</p>\n        )}\n        {searchedTodos.map((todo) => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.complete}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n      <CreateTodoButton setOpenModal={setOpenModal} />\n      {!!openModal && (\n        <CreateTask>\n          <TodoForm />\n        </CreateTask>\n      )}\n    </>\n  );\n}\n\nexport { AppUI };\n","import { AppUI } from \"./AppUI\";\nimport { TodoProvider } from \"./components/TodoContext\";\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}